{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Homework: Machine Learning with Python","provenance":[],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["Tyler Echols "],"metadata":{"id":"IogKLcM2eF1O"}},{"cell_type":"code","execution_count":null,"metadata":{"executionInfo":{"status":"error","timestamp":1658720972384,"user_tz":300,"elapsed":1755,"user":{"displayName":"Nayana Menon","userId":"06016453965372058016"}},"id":"QhuYnmcQfipt","colab":{"base_uri":"https://localhost:8080/","height":3949},"outputId":"e3375b9a-a7cd-4fa0-a8ad-390b042ef778"},"outputs":[{"output_type":"stream","name":"stdout","text":["\\Data Frame \n","               Date Location  MinTemp  MaxTemp  Rainfall  Evaporation  \\\n","0       2008-12-01   Albury     13.4     22.9       0.6          NaN   \n","1       2008-12-02   Albury      7.4     25.1       0.0          NaN   \n","2       2008-12-03   Albury     12.9     25.7       0.0          NaN   \n","3       2008-12-04   Albury      9.2     28.0       0.0          NaN   \n","4       2008-12-05   Albury     17.5     32.3       1.0          NaN   \n","...            ...      ...      ...      ...       ...          ...   \n","145455  2017-06-21    Uluru      2.8     23.4       0.0          NaN   \n","145456  2017-06-22    Uluru      3.6     25.3       0.0          NaN   \n","145457  2017-06-23    Uluru      5.4     26.9       0.0          NaN   \n","145458  2017-06-24    Uluru      7.8     27.0       0.0          NaN   \n","145459  2017-06-25    Uluru     14.9      NaN       0.0          NaN   \n","\n","        Sunshine WindGustDir  WindGustSpeed WindDir9am  ... Humidity9am  \\\n","0            NaN           W           44.0          W  ...        71.0   \n","1            NaN         WNW           44.0        NNW  ...        44.0   \n","2            NaN         WSW           46.0          W  ...        38.0   \n","3            NaN          NE           24.0         SE  ...        45.0   \n","4            NaN           W           41.0        ENE  ...        82.0   \n","...          ...         ...            ...        ...  ...         ...   \n","145455       NaN           E           31.0         SE  ...        51.0   \n","145456       NaN         NNW           22.0         SE  ...        56.0   \n","145457       NaN           N           37.0         SE  ...        53.0   \n","145458       NaN          SE           28.0        SSE  ...        51.0   \n","145459       NaN         NaN            NaN        ESE  ...        62.0   \n","\n","        Humidity3pm  Pressure9am  Pressure3pm  Cloud9am  Cloud3pm  Temp9am  \\\n","0              22.0       1007.7       1007.1       8.0       NaN     16.9   \n","1              25.0       1010.6       1007.8       NaN       NaN     17.2   \n","2              30.0       1007.6       1008.7       NaN       2.0     21.0   \n","3              16.0       1017.6       1012.8       NaN       NaN     18.1   \n","4              33.0       1010.8       1006.0       7.0       8.0     17.8   \n","...             ...          ...          ...       ...       ...      ...   \n","145455         24.0       1024.6       1020.3       NaN       NaN     10.1   \n","145456         21.0       1023.5       1019.1       NaN       NaN     10.9   \n","145457         24.0       1021.0       1016.8       NaN       NaN     12.5   \n","145458         24.0       1019.4       1016.5       3.0       2.0     15.1   \n","145459         36.0       1020.2       1017.9       8.0       8.0     15.0   \n","\n","        Temp3pm  RainToday  RainTomorrow  \n","0          21.8         No            No  \n","1          24.3         No            No  \n","2          23.2         No            No  \n","3          26.5         No            No  \n","4          29.7         No            No  \n","...         ...        ...           ...  \n","145455     22.4         No            No  \n","145456     24.5         No            No  \n","145457     26.1         No            No  \n","145458     26.0         No            No  \n","145459     20.9         No           NaN  \n","\n","[145460 rows x 23 columns]\n","<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 145460 entries, 0 to 145459\n","Data columns (total 23 columns):\n"," #   Column         Non-Null Count   Dtype  \n","---  ------         --------------   -----  \n"," 0   Date           145460 non-null  object \n"," 1   Location       145460 non-null  object \n"," 2   MinTemp        143975 non-null  float64\n"," 3   MaxTemp        144199 non-null  float64\n"," 4   Rainfall       142199 non-null  float64\n"," 5   Evaporation    82670 non-null   float64\n"," 6   Sunshine       75625 non-null   float64\n"," 7   WindGustDir    135134 non-null  object \n"," 8   WindGustSpeed  135197 non-null  float64\n"," 9   WindDir9am     134894 non-null  object \n"," 10  WindDir3pm     141232 non-null  object \n"," 11  WindSpeed9am   143693 non-null  float64\n"," 12  WindSpeed3pm   142398 non-null  float64\n"," 13  Humidity9am    142806 non-null  float64\n"," 14  Humidity3pm    140953 non-null  float64\n"," 15  Pressure9am    130395 non-null  float64\n"," 16  Pressure3pm    130432 non-null  float64\n"," 17  Cloud9am       89572 non-null   float64\n"," 18  Cloud3pm       86102 non-null   float64\n"," 19  Temp9am        143693 non-null  float64\n"," 20  Temp3pm        141851 non-null  float64\n"," 21  RainToday      142199 non-null  object \n"," 22  RainTomorrow   142193 non-null  object \n","dtypes: float64(16), object(7)\n","memory usage: 25.5+ MB\n","        MinTemp  MaxTemp  Rainfall  Evaporation  Sunshine  WindGustSpeed  \\\n","0          13.4     22.9       0.6          NaN       NaN           44.0   \n","1           7.4     25.1       0.0          NaN       NaN           44.0   \n","2          12.9     25.7       0.0          NaN       NaN           46.0   \n","3           9.2     28.0       0.0          NaN       NaN           24.0   \n","4          17.5     32.3       1.0          NaN       NaN           41.0   \n","...         ...      ...       ...          ...       ...            ...   \n","145455      2.8     23.4       0.0          NaN       NaN           31.0   \n","145456      3.6     25.3       0.0          NaN       NaN           22.0   \n","145457      5.4     26.9       0.0          NaN       NaN           37.0   \n","145458      7.8     27.0       0.0          NaN       NaN           28.0   \n","145459     14.9      NaN       0.0          NaN       NaN            NaN   \n","\n","        WindSpeed9am  WindSpeed3pm  Humidity9am  Humidity3pm  Pressure9am  \\\n","0               20.0          24.0         71.0         22.0       1007.7   \n","1                4.0          22.0         44.0         25.0       1010.6   \n","2               19.0          26.0         38.0         30.0       1007.6   \n","3               11.0           9.0         45.0         16.0       1017.6   \n","4                7.0          20.0         82.0         33.0       1010.8   \n","...              ...           ...          ...          ...          ...   \n","145455          13.0          11.0         51.0         24.0       1024.6   \n","145456          13.0           9.0         56.0         21.0       1023.5   \n","145457           9.0           9.0         53.0         24.0       1021.0   \n","145458          13.0           7.0         51.0         24.0       1019.4   \n","145459          17.0          17.0         62.0         36.0       1020.2   \n","\n","        Pressure3pm  Cloud9am  Cloud3pm  Temp9am  Temp3pm RainToday  \\\n","0            1007.1       8.0       NaN     16.9     21.8        No   \n","1            1007.8       NaN       NaN     17.2     24.3        No   \n","2            1008.7       NaN       2.0     21.0     23.2        No   \n","3            1012.8       NaN       NaN     18.1     26.5        No   \n","4            1006.0       7.0       8.0     17.8     29.7        No   \n","...             ...       ...       ...      ...      ...       ...   \n","145455       1020.3       NaN       NaN     10.1     22.4        No   \n","145456       1019.1       NaN       NaN     10.9     24.5        No   \n","145457       1016.8       NaN       NaN     12.5     26.1        No   \n","145458       1016.5       3.0       2.0     15.1     26.0        No   \n","145459       1017.9       8.0       8.0     15.0     20.9        No   \n","\n","       RainTomorrow  \n","0                No  \n","1                No  \n","2                No  \n","3                No  \n","4                No  \n","...             ...  \n","145455           No  \n","145456           No  \n","145457           No  \n","145458           No  \n","145459          NaN  \n","\n","[145460 rows x 18 columns]\n","   MinTemp  MaxTemp  Rainfall  Evaporation  Sunshine  WindGustSpeed  \\\n","0     13.4     22.9       0.6          NaN       NaN           44.0   \n","1      7.4     25.1       0.0          NaN       NaN           44.0   \n","2     12.9     25.7       0.0          NaN       NaN           46.0   \n","3      9.2     28.0       0.0          NaN       NaN           24.0   \n","4     17.5     32.3       1.0          NaN       NaN           41.0   \n","\n","   WindSpeed9am  WindSpeed3pm  Humidity9am  Humidity3pm  Pressure9am  \\\n","0          20.0          24.0         71.0         22.0       1007.7   \n","1           4.0          22.0         44.0         25.0       1010.6   \n","2          19.0          26.0         38.0         30.0       1007.6   \n","3          11.0           9.0         45.0         16.0       1017.6   \n","4           7.0          20.0         82.0         33.0       1010.8   \n","\n","   Pressure3pm  Cloud9am  Cloud3pm  Temp9am  Temp3pm RainToday RainTomorrow  \n","0       1007.1       8.0       NaN     16.9     21.8        No           No  \n","1       1007.8       NaN       NaN     17.2     24.3        No           No  \n","2       1008.7       NaN       2.0     21.0     23.2        No           No  \n","3       1012.8       NaN       NaN     18.1     26.5        No           No  \n","4       1006.0       7.0       8.0     17.8     29.7        No           No  \n","\n"," Data Frame Dimensions (145460, 18)\n","train size: (116368, 12)\n","test size: (29092, 12)\n"]},{"output_type":"error","ename":"KeyError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/indexes/base.py\u001b[0m in \u001b[0;36mget_loc\u001b[0;34m(self, key, method, tolerance)\u001b[0m\n\u001b[1;32m   3360\u001b[0m             \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 3361\u001b[0;31m                 \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_engine\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcasted_key\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3362\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mKeyError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0merr\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/_libs/index.pyx\u001b[0m in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[0;34m()\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/_libs/index.pyx\u001b[0m in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[0;34m()\u001b[0m\n","\u001b[0;32mpandas/_libs/hashtable_class_helper.pxi\u001b[0m in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[0;34m()\u001b[0m\n","\u001b[0;32mpandas/_libs/hashtable_class_helper.pxi\u001b[0m in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[0;34m()\u001b[0m\n","\u001b[0;31mKeyError\u001b[0m: 'WindGustDir'","\nThe above exception was the direct cause of the following exception:\n","\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)","\u001b[0;32m<ipython-input-11-0f0fdac62e4e>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     60\u001b[0m \u001b[0md\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m{\u001b[0m\u001b[0;34m'WindGustDir'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     61\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 62\u001b[0;31m \u001b[0mdf\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'WindGustDir'\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m  \u001b[0mdf\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'WindGustDir'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmap\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0md\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     63\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     64\u001b[0m \u001b[0md\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m{\u001b[0m\u001b[0;34m'YES'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'NO'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/frame.py\u001b[0m in \u001b[0;36m__getitem__\u001b[0;34m(self, key)\u001b[0m\n\u001b[1;32m   3456\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnlevels\u001b[0m \u001b[0;34m>\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3457\u001b[0m                 \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_getitem_multilevel\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 3458\u001b[0;31m             \u001b[0mindexer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3459\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mis_integer\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mindexer\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3460\u001b[0m                 \u001b[0mindexer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mindexer\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/indexes/base.py\u001b[0m in \u001b[0;36mget_loc\u001b[0;34m(self, key, method, tolerance)\u001b[0m\n\u001b[1;32m   3361\u001b[0m                 \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_engine\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcasted_key\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3362\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mKeyError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0merr\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 3363\u001b[0;31m                 \u001b[0;32mraise\u001b[0m \u001b[0mKeyError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0merr\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3364\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3365\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mis_scalar\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0misna\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhasnans\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyError\u001b[0m: 'WindGustDir'"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}],"source":["import pandas as pd\n","import numpy as np\n","import seaborn as sb\n","from sklearn.model_selection import train_test_split\n","from sklearn.linear_model import LinearRegression\n","from sklearn import tree\n","import pydotplus\n","from sklearn.tree import DecisionTreeRegressor\n","import matplotlib.pyplot as plt\n","import matplotlib.image as pltimg\n","import matplotlib.pyplot as plt\n","from sklearn.neighbors import KNeighborsRegressor\n","\n","df = pd.read_csv('weatherAUS.csv')\n","print('\\Data Frame \\n', df)\n","\n","# Data Exploration\n","df.head()\n","\n","df.info()\n","\n","df.describe()\n","\n","df.shape\n","\n","df.columns \n","\n","\n","# Data Cleaning\n","df = df.drop(columns=['Location', 'Date', 'WindGustDir', 'WindDir9am', 'WindDir3pm'])\n","print(df)\n","\n","\n","# Graphs\n","df.plot(x=\"Humidity9am\", y=\"Rainfall\", kind=\"scatter\") \n","df.plot(x= \"Humidity3pm\", y=\"Rainfall\", kind = \"scatter\")\n","\n","\n","\n","\n","# Linear Regression\n","\n","print(df.head())\n","print('\\n Data Frame Dimensions', df.shape)\n","\n","\n","X = df.iloc[:, 0:12]\n","\n","y = df.iloc[:, 13]\n","\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=1234)\n","\n","print('train size:', X_train.shape)\n","print('test size:', X_test.shape)\n","\n","\n","\n","# Decision Tree \n","# we are going to try and create a decision tree \n","d = {'WindGustDir': 1}\n","\n","df['WindGustDir'] =  df['WindGustDir'].map(d)\n","\n","d = {'YES': 1, 'NO': 0}\n","df['Go'] = df['Go'].map(d)\n","\n","print(df)\n","\n","features = ['Rainfall', 'Presure3pm', 'Pressure9am', 'WindDir3pm', 'WindDir9am', 'WindGustDir']\n","\n","X = df[features]\n","y = df['Go']\n","\n","print(X)\n","print(y)\n","\n","dtree = DecisionTreeClassifier()\n","dtree = dtree.fit(X, y) \n","\n","data = tree.export_graphviz(dtree, out_file=None, feature_names=features)\n","graph = pydotplus.graph_from_dot_data(data)\n","\n","\n","# kNN \n","regressor = KNeighborsRegressorn(n_Rainfall=3)\n","regressor.fit(X_train, y_train)\n","\n","X_train_scaled = scaler.transform(X_train)\n","X_test = scaler.transform(X_test) \n","\n","\n","\n","#Analysis \n","# Based on the results used for this project I have came to the conclusion that there is some data that needs more defining features to work properly. \n","# Some data can be read and calculated properly but if not defined properly it will have a difficult time displaying any data. However when it comes to inputting data presented\n","# it is possiable to get whatever results needed. Python seems to run at a decent enough pase if not faster than R. With more data outputs than normal comparative to R though both can suffer \n","# from a lack of uncorprative data, or hard to translate. They both should work with any given algorith put within either of the making less hasssel to work with the data.  \n","\n","\n","\n","# My Thought's \n","# this Language is just as frustrating to work in as R. Though there are some things that make it remotley comprhensiable to write code in this language is still as difficult.\n","# However if it is to be belevied that Python is better than R for machine learning then I can potentially see how that argument is sound. It definietly lessens the amount of data reading\n","# and conversions need to calculate data and display data. Even though most of my value did not end up working or there were error's that    \n","\n","\n"]},{"cell_type":"code","source":[""],"metadata":{"id":"P7dxFYojMiYE"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":[""],"metadata":{"id":"iQ4cvqH7elK0"}}]}